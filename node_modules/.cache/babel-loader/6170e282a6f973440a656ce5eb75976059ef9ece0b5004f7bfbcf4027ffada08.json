{"ast":null,"code":"// import { PLUS, MINUS } from './constants';\n\n// const initialState = {\n//   amount: 0,\n// };\n\n// export const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case PLUS:\n//       return {\n//         ...state,\n//         amount: state.amount + action.payload,\n//       };\n//     case MINUS:\n//       return {\n//         ...state,\n//         amount: state.amount - action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { plusAction, minusAction } from \"./actions\";\nconst initialState = {\n  amount: 0\n};\n\n// Застарілий приклад\n\n// export const reducer = createReducer(initialState, {\n//   [plusAction]: (state, action) => {\n//     return {\n//         ...state,\n//         amount: state.amount + action.payload,\n//       };\n//   },\n//   [minusAction]: (state, action) => {\n//     return {\n//         ...state,\n//         amount: state.amount - action.payload,\n//       };\n//   },\n// });\n\nexport const reducer = createReducer(initialState, builder => {\n  builder.addCase(plusAction, (state, action) => ({\n    ...state,\n    amount: state.amount + action.payload\n  })).addCase(minusAction, (state, action) => ({\n    ...state,\n    amount: state.amount - action.payload\n  }));\n});","map":{"version":3,"names":["createReducer","plusAction","minusAction","initialState","amount","reducer","builder","addCase","state","action","payload"],"sources":["/home/artur/Documents/redux-counter/src/redux/reducers.js"],"sourcesContent":["// import { PLUS, MINUS } from './constants';\n\n// const initialState = {\n//   amount: 0,\n// };\n\n// export const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case PLUS:\n//       return {\n//         ...state,\n//         amount: state.amount + action.payload,\n//       };\n//     case MINUS:\n//       return {\n//         ...state,\n//         amount: state.amount - action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { plusAction, minusAction } from \"./actions\";\n\nconst initialState = {\n  amount: 0,\n};\n\n// Застарілий приклад\n\n// export const reducer = createReducer(initialState, {\n//   [plusAction]: (state, action) => {\n//     return {\n//         ...state,\n//         amount: state.amount + action.payload,\n//       };\n//   },\n//   [minusAction]: (state, action) => {\n//     return {\n//         ...state,\n//         amount: state.amount - action.payload,\n//       };\n//   },\n// });\n\nexport const reducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(plusAction, (state, action) => ({\n      ...state,\n        amount: state.amount + action.payload,\n    }))\n    .addCase(minusAction, (state, action) => ({\n      ...state,\n        amount: state.amount - action.payload,\n    }))\n});\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,UAAU,EAAEC,WAAW,QAAQ,WAAW;AAEnD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAGL,aAAa,CAACG,YAAY,EAAGG,OAAO,IAAK;EAC9DA,OAAO,CACJC,OAAO,CAACN,UAAU,EAAE,CAACO,KAAK,EAAEC,MAAM,MAAM;IACvC,GAAGD,KAAK;IACNJ,MAAM,EAAEI,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC;EAClC,CAAC,CAAC,CAAC,CACFH,OAAO,CAACL,WAAW,EAAE,CAACM,KAAK,EAAEC,MAAM,MAAM;IACxC,GAAGD,KAAK;IACNJ,MAAM,EAAEI,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC;EAClC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}